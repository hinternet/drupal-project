version: "3.7"

services:
#  mariadb:
#    image: wodby/mariadb:$MARIADB_TAG
#    container_name: "${PROJECT_NAME}_mariadb"
#    stop_grace_period: 30s
#    environment:
#      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
#      MYSQL_DATABASE: $DB_NAME
#      MYSQL_USER: $DB_USER
#      MYSQL_PASSWORD: $DB_PASSWORD
#      MYSQL_CHARACTER_SET_SERVER: $MYSQL_CHARACTER_SET_SERVER
#      MYSQL_COLLATION_SERVER: $MYSQL_COLLATION_SERVER
#    volumes:
##      - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
#      - database:/var/lib/mysql

  php:
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_php"
    environment:
      PHP_SENDMAIL_PATH: $PHP_SENDMAIL_PATH
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      DB_DRIVER: $DB_DRIVER
      DRUSH_OPTIONS_URI: "https://${PROJECT_BASE_URL}:${WEB_SSL_PORT}"
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
#      COLUMNS: 80 # Set 80 columns for docker exec -it.

  crond:
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_crond"
    environment:
      CRONTAB: $CRONTAB
    command: sudo -E LD_PRELOAD=/usr/lib/preloadable_libiconv.so crond -f -d 0

#  nginx:
#    image: wodby/nginx:$NGINX_TAG
#    container_name: "${PROJECT_NAME}_nginx"
#    depends_on:
#    - php
#    environment:
#      NGINX_STATIC_OPEN_FILE_CACHE: "off"
#      NGINX_ERROR_LOG_LEVEL: debug
#      NGINX_BACKEND_HOST: php
#      NGINX_SERVER_ROOT: $NGINX_SERVER_ROOT
#      NGINX_VHOST_PRESET: $NGINX_VHOST_PRESET
#      NGINX_DRUPAL_FILE_PROXY_URL: $NGINX_DRUPAL_FILE_PROXY_URL
#    labels:
#    - "traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`${PROJECT_BASE_URL}`)"
#    - "traefik.http.routers.${PROJECT_NAME}_nginx.entrypoints=websecure"
#    - "traefik.http.routers.${PROJECT_NAME}_nginx.tls"

  mailpit:
    image: "axllent/mailpit:${MAILPIT_TAG}"
    container_name: "${PROJECT_NAME}_mailpit"
    labels:
      - "traefik.http.services.${PROJECT_NAME}_mailpit.loadbalancer.server.port=8025"
      - "traefik.http.routers.${PROJECT_NAME}_mailpit.rule=Host(`mailpit.${PROJECT_BASE_URL}`)"
      - "traefik.http.routers.${PROJECT_NAME}_mailpit.entrypoints=websecure"
      - "traefik.http.routers.${PROJECT_NAME}_mailpit.tls"
    volumes:
      - mailpit:/data

#  postgres:
#    image: wodby/postgres:$POSTGRES_TAG
#    container_name: "${PROJECT_NAME}_postgres"
#    stop_grace_period: 30s
#    environment:
#      POSTGRES_PASSWORD: $DB_PASSWORD
#      POSTGRES_DB: $DB_NAME
#      POSTGRES_USER: $DB_USER
#      POSTGRES_DB_EXTENSIONS: pg_trgm
#    volumes:
##    - ./postgres-init:/docker-entrypoint-initdb.d # Place init file(s) here.
#    - database:/var/lib/postgresql/data

#  apache:
#    image: wodby/apache:$APACHE_TAG
#    container_name: "${PROJECT_NAME}_apache"
#    depends_on:
#    - php
#    environment:
#      APACHE_LOG_LEVEL: debug
#      APACHE_BACKEND_HOST: php
#      APACHE_VHOST_PRESET: php
#      APACHE_DOCUMENT_ROOT: $APACHE_DOCUMENT_ROOT
#    labels:
#    - "traefik.http.routers.${PROJECT_NAME}_apache.rule=Host(`${PROJECT_BASE_URL}`)"
#    - "traefik.http.routers.${PROJECT_NAME}_apache.entrypoints=websecure"
#    - "traefik.http.routers.${PROJECT_NAME}_apache.tls"

#  varnish:
#    image: wodby/varnish:$VARNISH_TAG
#    container_name: "${PROJECT_NAME}_varnish"
#    depends_on:
#    - nginx
#    environment:
#      VARNISH_SECRET: secret
#      VARNISH_BACKEND_HOST: nginx
#      VARNISH_BACKEND_PORT: 80
#      VARNISH_CONFIG_PRESET: drupal
#      VARNISH_ALLOW_UNRESTRICTED_PURGE: 1
#    labels:
#    - "traefik.http.services.${PROJECT_NAME}_varnish.loadbalancer.server.port=6081"
#    - "traefik.http.routers.${PROJECT_NAME}_varnish.rule=Host(`varnish.${PROJECT_BASE_URL}`)"
#    - "traefik.http.routers.${PROJECT_NAME}_varnish.entrypoints=websecure"
#    - "traefik.http.routers.${PROJECT_NAME}_varnish.tls"

#  redis:
#    container_name: "${PROJECT_NAME}_redis"
#    image: wodby/redis:$REDIS_TAG

#  adminer:
#    container_name: "${PROJECT_NAME}_adminer"
#    image: wodby/adminer:$ADMINER_TAG
#    environment:
#      # For PostgreSQL:
#      #      ADMINER_DEFAULT_DB_DRIVER: pgsql
#      ADMINER_DEFAULT_DB_HOST: $DB_HOST
#      ADMINER_DEFAULT_DB_NAME: $DB_NAME
#    labels:
#    - "traefik.http.routers.${PROJECT_NAME}_adminer.rule=Host(`adminer.${PROJECT_BASE_URL}`)"
#    - "traefik.http.routers.${PROJECT_NAME}_adminer.entrypoints=websecure"
#    - "traefik.http.routers.${PROJECT_NAME}_adminer.tls"

#  pma:
#    image: phpmyadmin/phpmyadmin
#    container_name: "${PROJECT_NAME}_pma"
#    environment:
#      PMA_HOST: $DB_HOST
#      PMA_USER: $DB_USER
#      PMA_PASSWORD: $DB_PASSWORD
#      UPLOAD_LIMIT: 1G
#    labels:
#    - "traefik.http.routers.${PROJECT_NAME}_pma.rule=Host(`pma.${PROJECT_BASE_URL}`)"
#    - "traefik.http.routers.${PROJECT_NAME}_pma.entrypoints=websecure"
#    - "traefik.http.routers.${PROJECT_NAME}_pma.tls"

#  solr:
#    image: wodby/solr:$SOLR_TAG
#    container_name: "${PROJECT_NAME}_solr"
#    environment:
#      SOLR_DEFAULT_CONFIG_SET: $SOLR_CONFIG_SET
#      SOLR_HEAP: 1024m
#    labels:
#    - "traefik.http.services.${PROJECT_NAME}_solr.loadbalancer.server.port=8983"
#    - "traefik.http.routers.${PROJECT_NAME}_solr.rule=Host(`solr.${PROJECT_BASE_URL}`)"
#    - "traefik.http.routers.${PROJECT_NAME}_solr.entrypoints=websecure"
#    - "traefik.http.routers.${PROJECT_NAME}_solr.tls"

#  zookeeper:
#    image: zookeeper:$ZOOKEEPER_TAG
#    container_name: "${PROJECT_NAME}_zookeeper"
#    environment:
#      ZOO_MY_ID: 1
#      ZOO_SERVERS: server.1=zookeeper:2888:3888;2181
#      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok

#  drupal-node:
#    image: wodby/drupal-node:$DRUPAL_NODE_TAG
#    container_name: "${PROJECT_NAME}_drupal_nodejs"
#    labels:
#    - "traefik.http.routers.${PROJECT_NAME}_drupal_node.rule=Host(`drupal_node.${PROJECT_BASE_URL}`)"
#    - "traefik.http.routers.${PROJECT_NAME}_drupal_node.entrypoints=websecure"
#    - "traefik.http.routers.${PROJECT_NAME}_drupal_node.tls"
#    environment:
#      NODE_SERVICE_KEY: node-service-key

#  memcached:
#    container_name: "${PROJECT_NAME}_memcached"
#    image: wodby/memcached:$MEMCACHED_TAG

#  rsyslog:
#    container_name: "${PROJECT_NAME}_rsyslog"
#    image: wodby/rsyslog:$RSYSLOG_TAG

#  athenapdf:
#    image: arachnysdocker/athenapdf-service:$ATHENAPDF_TAG
#    container_name: "${PROJECT_NAME}_athenapdf"
#    environment:
#      WEAVER_AUTH_KEY: weaver-auth-key
#      WEAVER_ATHENA_CMD: "athenapdf -S"
#      WEAVER_MAX_WORKERS: 10
#      WEAVER_MAX_CONVERSION_QUEUE: 50
#      WEAVER_WORKER_TIMEOUT: 90
#      WEAVER_CONVERSION_FALLBACK: "false"

#  node:
#    image: wodby/node:$NODE_TAG
#    container_name: "${PROJECT_NAME}_node"
#    working_dir: /var/www/html/path/to/theme/to/build
#    labels:
#    - "traefik.http.services.${PROJECT_NAME}_node.loadbalancer.server.port=3000"
#    - "traefik.http.routers.${PROJECT_NAME}_node.rule=Host(`node.${PROJECT_BASE_URL}`)"
#    - "traefik.http.routers.${PROJECT_NAME}_node.entrypoints=websecure"
#    - "traefik.http.routers.${PROJECT_NAME}_node.tls"
#    expose:
#    - "3000"
#    command: sh -c 'yarn install && yarn run start'

#  elasticsearch:
#    image: wodby/elasticsearch:$ELASTICSEARCH_TAG
#    container_name: "${PROJECT_NAME}_elasticsearch"
#    environment:
#      ES_JAVA_OPTS: "-Xms500m -Xmx500m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1

#  kibana:
#    image: wodby/kibana:$KIBANA_TAG
#    container_name: "${PROJECT_NAME}_kibana"
#    depends_on:
#    - elasticsearch
#    labels:
#    - "traefik.http.services.${PROJECT_NAME}_kibana.loadbalancer.server.port=5601"
#    - "traefik.http.routers.${PROJECT_NAME}_kibana.rule=Host(`kibana.${PROJECT_BASE_URL}`)"
#    - "traefik.http.routers.${PROJECT_NAME}_kibana.entrypoints=websecure"
#    - "traefik.http.routers.${PROJECT_NAME}_kibana.tls"

#  opensmtpd:
#    container_name: "${PROJECT_NAME}_opensmtpd"
#    image: wodby/opensmtpd:$OPENSMTPD_TAG

#  ngrok:
#    image: wernight/ngrok:$NGROK_TAG
#    container_name: "${PROJECT_NAME}_ngrok"
#    environment:
#      NGROK_AUTH: $NGROK_AUTH
#      NGROK_USERNAME: $NGROK_USERNAME
#      NGROK_PASSWORD: $NGROK_PASSWORD
#      NGROK_PROTOCOL: $NGROK_PROTOCOL
#      NGROK_PORT: $NGROK_PORT
#      NGROK_REGION: $NGROK_REGION
#      NGROK_LOOK_DOMAIN: $NGROK_LOOK_DOMAIN
#      NGROK_BINDTLS: $NGROK_BINDTLS
#      NGROK_HEADER: $NGROK_HEADER
#      NGROK_DEBUG: $NGROK_DEBUG
#      NGROK_SUBDOMAIN: $NGROK_SUBDOMAIN
#      NGROK_HOSTNAME: $NGROK_HOSTNAME
#      NGROK_REMOTE_ADDR: $NGROK_REMOTE_ADDR
#    labels:
#      - "traefik.http.routers.${PROJECT_NAME}_ngrok.rule=Host(`ngrok.${PROJECT_BASE_URL}`)"
#      - "traefik.http.routers.${PROJECT_NAME}_ngrok.entrypoints=websecure"
#      - "traefik.http.routers.${PROJECT_NAME}_ngrok.tls"

  traefik:
    image: traefik:latest
    container_name: "${PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker
    labels:
      - "traefik.http.routers.api.rule=Host(`traefik.${PROJECT_BASE_URL}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls"
    ports:
      - "${WEB_PORT}:80"
      - "${WEB_SSL_PORT}:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.ssl:/etc/traefik/certs
      - ./traefik.toml:/etc/traefik/traefik.toml

volumes:
  ## For database
  database:
  ## For mailpit
  mailpit:
